{"version":3,"sources":["../../node_modules/antd/es/notification/style/index.js","../../common/helpers/auth.js","components/SignIn/sign-in.component.jsx","components/SignInMaster/sign-in-master.component.jsx"],"names":["getUserMeta","dispatch","a","storage","getStorage","get","ACCESS_TOKEN","getUserMetaAPI","meta","data","companyType","company_type","name","email","username","id","isAdmin","is_admin","companyId","company_id","userId","user_id","userAuthenticated","viewType","type","active","delete","REFRESH_TOKEN","connect","state","user","userMeta","useDispatch","useState","signIn","setSignIn","useForm","form","tailLayout","wrapperCol","offset","span","onFinish","password","getJWTTokens","tokens","access","refresh","window","set","notification","error","message","resetFields","className","labelCol","hideRequiredMark","initialValues","remember","onFinishFailed","errorInfo","Item","label","rules","required","Password","valuePropName","htmlType","align","justify","onClick","navigate","size","SignInMaster","src","alt","style","zIndex","position","width","height","backgroundPosition","backgroundSize","md","sm","right","top","opacity","to"],"mappings":"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","file":"static/js/73.8a61bdaa.chunk.js","sourcesContent":["import '../../style/default.less';\nimport './index.less';","import { userAuthenticated } from '../actions/signIn';\r\nimport { ACCESS_TOKEN, REFRESH_TOKEN } from '../constants/storage';\r\n\r\nimport { getStorage } from './shared';\r\n\r\nimport { getUserMeta as getUserMetaAPI } from '../api/auth';\r\n\r\nexport const getUserMeta = async (dispatch) => {\r\n  const storage = getStorage();\r\n  if (!(await storage.get(ACCESS_TOKEN, null))) return false;\r\n\r\n  try {\r\n    const { data: meta } = await getUserMetaAPI();\r\n    if (meta) {\r\n      const { company_type:companyType, name, email, username, id, is_admin:isAdmin, company_id:companyId, user_id: userId } = meta;\r\n      dispatch(userAuthenticated({ name, email, username, id, companyType, isAdmin, viewType: companyType[0]||null ,type : 'employee', active:true, companyId, userId }));\r\n      return false;\r\n    }\r\n\r\n    await storage.delete(ACCESS_TOKEN);\r\n    await storage.delete(REFRESH_TOKEN);\r\n  } catch (e) {\r\n    // ignore error\r\n  }\r\n\r\n  return true;\r\n};\r\n","import React, {useState} from 'react';\r\nimport {Form, Button, Input, Checkbox, notification, Row, Col} from 'antd';\r\nimport {ACCESS_TOKEN, REFRESH_TOKEN} from 'common/constants/storage';\r\nimport {getJWTTokens} from 'common/api/auth';\r\nimport {getUserMeta} from 'common/helpers/auth';\r\nimport {useDispatch} from 'react-redux';\r\nimport {connect} from 'react-redux';\r\nimport {navigate} from '@reach/router';\r\n\r\nimport './sign-in.styles.scss';\r\n\r\nconst SignIn = ({user}) => {\r\n  const dispatch = useDispatch();\r\n  const [signIn, setSignIn] = useState(false);\r\n\r\n  const [form] = Form.useForm();\r\n\r\n  const layout = {\r\n    labelCol: {\r\n      span: 8,\r\n    },\r\n    wrapperCol: {\r\n      span: 8,\r\n    },\r\n  };\r\n  const tailLayout = {\r\n    wrapperCol: {\r\n      offset: 9,\r\n      span: 14,\r\n    },\r\n  };\r\n\r\n  const onFinish = async ({username, password}) => {\r\n    try {\r\n      // setLoading(true);\r\n      const {data: tokens} = await getJWTTokens({username, password});\r\n\r\n      const {access, refresh} = tokens;\r\n      await window.storage.set(ACCESS_TOKEN, access);\r\n      await window.storage.set(REFRESH_TOKEN, refresh);\r\n\r\n      console.log(access);\r\n      await getUserMeta(dispatch);\r\n    } catch (e) {\r\n      notification.error({\r\n        message: `Can't Sign In user: ${username} - Invalid Credentials.`,\r\n      });\r\n    }\r\n    form.resetFields();\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n\r\n  const onSignIn = () => {\r\n    setSignIn(true);\r\n  };\r\n\r\n  if (signIn) {\r\n    return (\r\n      <div className=\"sign-in\">\r\n        <Form\r\n          form={form}\r\n          {...layout}\r\n          name=\"basic\"\r\n          hideRequiredMark\r\n          initialValues={{\r\n            remember: true,\r\n          }}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}>\r\n          <Form.Item\r\n            label=\"Username\"\r\n            name=\"username\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input your username!',\r\n              },\r\n            ]}>\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Password\"\r\n            name=\"password\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input your password!',\r\n              },\r\n            ]}>\r\n            <Input.Password />\r\n          </Form.Item>\r\n\r\n          <Form.Item {...tailLayout} name=\"remember\" valuePropName=\"checked\">\r\n            <Checkbox>Remember me</Checkbox>\r\n          </Form.Item>\r\n\r\n          <Form.Item {...tailLayout}>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n        <Row align=\"middle\" justify=\"center\">\r\n            <Col span={8}>\r\n            <Button type=\"link\" onClick={() => {navigate('/forgot-password');}}>\r\n              Forgot Password?\r\n            </Button>\r\n            </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"intro\">\r\n      <h1>Welcome to the world of organized returnable transport items management</h1>\r\n      <br />\r\n      <div className=\"content\">\r\n        TRAKKIA helps you track and manage returnable transport items in Industrial/Manufacturing supply chains efficiently and effectively. Use Trakkia to reduce asset loss and optimise asset utilisation to boost profitability.\r\n      </div>\r\n      <br /> <br />\r\n      <Button size=\"large\" type=\"primary\" onClick={() => onSignIn()}>\r\n        Sign In\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {user: state.user.userMeta};\r\n};\r\n\r\nexport default connect(mapStateToProps)(SignIn);\r\n","import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Row, Col, Button } from 'antd';\r\nimport { Link } from '@reach/router';\r\nimport SignIn from '../SignIn/sign-in.component';\r\n\r\nimport './sign-in-master.styles.scss';\r\n\r\nconst SignInMaster = () => (\r\n  <div className='signInMaster'>\r\n    <div className='logo'>\r\n      <img src='home-logo.png' alt='logoimg' style={{ zIndex: '5' }} />\r\n    </div>\r\n    <img\r\n      src='back3.jpg'\r\n      alt='img'\r\n      style={{\r\n        position: 'absolute',\r\n        width: '100vw',\r\n        height: '100vh',\r\n        backgroundPosition: 'center',\r\n        backgroundSize: 'cover',\r\n      }}\r\n    />\r\n    <br />\r\n    <br />\r\n    <Row>\r\n      <Col md={10} sm={24}>\r\n        <SignIn />\r\n      </Col>\r\n      <Col md={14}>\r\n        <Button\r\n          type='primary'\r\n          style={{\r\n            position: 'absolute',\r\n            right: '190px',\r\n            top: '160px',\r\n            width: '100px',\r\n            height: '90px',\r\n            opacity: '0',\r\n          }}>\r\n          <Link to='/sign-up/' />\r\n        </Button>\r\n        {/* <Button\r\n          type='primary'\r\n          style={{\r\n            position: 'absolute',\r\n            right: '150px',\r\n            top: '160px',\r\n            width: '10px',\r\n            height: '90px',\r\n            opacity: '0',\r\n          }}>\r\n          <Link to='/sign-up/employee' />\r\n        </Button> */}\r\n      </Col>\r\n    </Row>\r\n  </div>\r\n);\r\n\r\nexport default SignInMaster;\r\n"],"sourceRoot":""}