{"version":3,"sources":["screens/employee/GRNStuff/PurchaseOrderPrint.js"],"names":["Title","Docket","location","match","useState","allotment","setAllotment","total","setTotal","id","useParams","useEffect","a","printPurchaseOrders","data","fetchAllotment","sum","items","forEach","i","item_price","item_quantity","className","src","process","alt","level","style","fontWeight","po_number","gst","material_vendor","span","name","street","split","map","s","trim","pincode","city","state","delivered_to","address","align","display","justifyContent","Date","toLocaleDateString","expected_delivery","bordered","size","item","description","parseInt","billing_gst","spinning","position","marginLeft","marginTop"],"mappings":"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","file":"static/js/78.9d57e9b5.chunk.js","sourcesContent":["\r\n  \r\nimport React, {useState, useEffect} from 'react';\r\nimport {Row, Col, Typography, Spin} from 'antd';\r\nimport {Table} from 'react-bootstrap';\r\nimport {useAPI} from 'common/hooks/api';\r\nimport moment from 'moment';\r\nimport {useParams} from '@reach/router';\r\nimport {printPurchaseOrders} from 'common/api/auth';\r\nimport '../../../components/Docket/docket.styles.scss';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst {Title} = Typography;\r\n\r\nconst Docket = ({location, match}) => {\r\n  const [allotment, setAllotment] = useState(null);\r\n  const [total, setTotal] = useState(0);\r\n  const {id} = useParams();\r\n\r\n  useEffect(async () => {\r\n    const fetchAllotment = async () => {\r\n      if (id) {\r\n        const {data} = await printPurchaseOrders(id);\r\n        if (data) {\r\n          setAllotment(data);\r\n        }\r\n      }\r\n    };\r\n    fetchAllotment();\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    if (allotment) {\r\n      let sum = 0;\r\n      allotment.items.forEach((i) => {\r\n        sum += i.item_price * i.item_quantity;\r\n      });\r\n      setTotal(sum);\r\n    }\r\n  }, [allotment]);\r\n\r\n  const a = [\r\n    '',\r\n    'one ',\r\n    'two ',\r\n    'three ',\r\n    'four ',\r\n    'five ',\r\n    'six ',\r\n    'seven ',\r\n    'eight ',\r\n    'nine ',\r\n    'ten ',\r\n    'eleven ',\r\n    'twelve ',\r\n    'thirteen ',\r\n    'fourteen ',\r\n    'fifteen ',\r\n    'sixteen ',\r\n    'seventeen ',\r\n    'eighteen ',\r\n    'nineteen ',\r\n  ];\r\n  const b = ['', '', 'twenty', 'thirty', 'forty', 'fifty', 'sixty', 'seventy', 'eighty', 'ninety'];\r\n\r\n  function inWords(num) {\r\n    if ((num = num.toString()).length > 9) return 'overflow';\r\n    const n = `000000000${num}`.substr(-9).match(/^(\\d{2})(\\d{2})(\\d{2})(\\d{1})(\\d{2})$/);\r\n    if (!n) return;\r\n    let str = '';\r\n    str += n[1] != 0 ? `${a[Number(n[1])] || `${b[n[1][0]]} ${a[n[1][1]]}`}crore ` : '';\r\n    str += n[2] != 0 ? `${a[Number(n[2])] || `${b[n[2][0]]} ${a[n[2][1]]}`}lakh ` : '';\r\n    str += n[3] != 0 ? `${a[Number(n[3])] || `${b[n[3][0]]} ${a[n[3][1]]}`}thousand ` : '';\r\n    str += n[4] != 0 ? `${a[Number(n[4])] || `${b[n[4][0]]} ${a[n[4][1]]}`}hundred ` : '';\r\n    str +=\r\n      n[5] != 0\r\n        ? `${(str != '' ? 'and ' : '') + (a[Number(n[5])] || `${b[n[5][0]]} ${a[n[5][1]]}`)}only `\r\n        : '';\r\n    return str;\r\n  }\r\n\r\n  if (allotment) {\r\n    return (\r\n      <div className=\"container-docket\">\r\n        <div className=\"header-docket\">\r\n          <div className=\"logo-docket\">\r\n            <img src={`${process.env.PUBLIC_URL}/home-logo.png`} alt=\"Yantraksh\" />\r\n          </div>\r\n          <div className=\"heading-docket\">\r\n            <Title level={2} style={{fontWeight: 'bold'}}>\r\n              PURCHASE ORDER\r\n              <br />\r\n              {`#${allotment.po_number}`}\r\n            </Title>\r\n          </div>\r\n        </div>\r\n        <hr />\r\n        <Row>\r\n          <Col>\r\n            <p>\r\n              <strong>YANTRAKSH LOGISTICS PRIVATE LIMITED</strong>\r\n              <br />\r\n              11 Rama Twins\r\n              <br />\r\n              Mission Road\r\n              <br />\r\n              Anand Gujarat\r\n              <br />\r\n              388325\r\n              <br />\r\n              India\r\n              <br />\r\n              GSTIN: {allotment.gst}\r\n            </p>\r\n          </Col>\r\n        </Row>\r\n        <br />\r\n        <Row>\r\n          {allotment.material_vendor && (\r\n            <Col span={17}>\r\n              <p>\r\n                Vendor Address\r\n                <br />\r\n                <strong>{allotment.material_vendor.name}</strong>\r\n                <br />\r\n                {allotment.material_vendor.street.split(',').map((s) => {\r\n                  return (\r\n                    <>\r\n                      {s.trim()} <br />\r\n                    </>\r\n                  );\r\n                })}\r\n                {allotment.material_vendor.pincode}\r\n                {allotment.material_vendor.city}\r\n                <br />\r\n                {allotment.material_vendor.state}\r\n                <br />\r\n                India\r\n                <br />\r\n              </p>\r\n            </Col>\r\n          )}\r\n          {allotment.delivered_to && (\r\n            <Col>\r\n              <p>\r\n                Delivered to\r\n                <br />\r\n                <strong>{allotment.delivered_to.name}</strong>\r\n                <br />\r\n                {allotment.delivered_to.address.split(',').map((s) => {\r\n                  return (\r\n                    <>\r\n                      {s.trim()} <br />\r\n                    </>\r\n                  );\r\n                })}\r\n                {allotment.delivered_to.pincode}\r\n                {allotment.delivered_to.city}\r\n                <br />\r\n                {allotment.delivered_to.state}\r\n                <br />\r\n                India\r\n                <br />\r\n              </p>\r\n            </Col>\r\n          )}\r\n        </Row>\r\n        <br />\r\n        <Row align=\"end\">\r\n          <Col span={7}>\r\n            <div style={{display: 'flex', justifyContent: 'space-between'}}>\r\n              <p>Data: </p>\r\n              <p>{new Date().toLocaleDateString()}</p>\r\n            </div>\r\n            <div style={{display: 'flex', justifyContent: 'space-between'}}>\r\n              <p>Delivery Date:</p>\r\n              <p>{`${allotment.expected_delivery.split('T')[0].split('-')[2]}/${\r\n                allotment.expected_delivery.split('T')[0].split('-')[1]\r\n              }/${allotment.expected_delivery.split('T')[0].split('-')[0]}`}</p>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        )}\r\n        <br />\r\n        <Row>\r\n          <Table bordered size=\"sm\">\r\n            <thead>\r\n              <tr>\r\n                <th>Product ID</th>\r\n                <th>Item & Description</th>\r\n                <th>Quantity</th>\r\n                <th>Rate</th>\r\n                <th>Amount</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {allotment.items.map((item) => {\r\n                if (item.item_quantity > 0) {\r\n                  return (\r\n                    <tr>\r\n                      <td>{item.id}</td>\r\n                      <td>\r\n                        {item.item.name} - {item.item.description}\r\n                      </td>\r\n                      <td>{item.item_price}</td>\r\n                      <td>{item.item_quantity}</td>\r\n                      <td>{item.item_quantity * item.item_price}</td>\r\n                    </tr>\r\n                  );\r\n                } else {\r\n                  return null;\r\n                }\r\n              })}\r\n            </tbody>\r\n          </Table>\r\n        </Row>\r\n        <Row>\r\n          <Col span={16} />\r\n          <Col span={7}>\r\n            <div style={{display: 'flex', justifyContent: 'space-between'}}>\r\n              <p>Sub Total: </p>\r\n              <p>{total}</p>\r\n            </div>\r\n            <div style={{display: 'flex', justifyContent: 'space-between'}}>\r\n              <p>IGST (18%): </p>\r\n              <p>{(total * parseInt(allotment.billing_gst)) / 100}</p>\r\n            </div>\r\n            <div style={{display: 'flex', justifyContent: 'space-between'}}>\r\n              <strong>Total: </strong>\r\n              <strong>{total + (total * parseInt(allotment.billing_gst)) / 100}</strong>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <br />\r\n        <br />\r\n        <Row>\r\n          <Col span={23}>\r\n            <h4>Terms & Conditions</h4>\r\n            <ol>\r\n              <li>\r\n                elivery Period: All the material must be delivered from your works within 1 week\r\n                from the date of Purchase Order.\r\n              </li>\r\n              <li>P & F Charges: Included within the price.</li>\r\n              <li>Payment Terms: 30 Days from Invoice submission through NEFT or Cheque</li>\r\n              <li>\r\n                Inspection & Testing: Inspection and quality check to be carried out by Yantraksh\r\n                designated executive during material Dispatch.\r\n              </li>\r\n              <li>Statutory Requirements: NA</li>\r\n            </ol>\r\n            <br />\r\n            <p>Authorized Signature _________________________________</p>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return <Spin spinning style={{position: 'absolute', marginLeft: '49vw', marginTop: '49vh'}} />;\r\n};\r\n\r\nexport default Docket;\r\n"],"sourceRoot":""}