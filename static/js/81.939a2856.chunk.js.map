{"version":3,"sources":["components/printCP.js"],"names":["Title","Paragraph","PrintCp","state","location","columns","title","key","dataIndex","render","solution","Object","keys","map","span","dataSource","field","value","sender_client","scs_id","contact_person","contact_no","email","table3","CreateTable","left","right","className","d","Date","utc","getTime","getTimezoneOffset","ist","toLocaleString","src","process","alt","split","id","level","i","size","pagination","bordered","receiverDetails"],"mappings":"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","file":"static/js/81.939a2856.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Row, Col, Typography, Table} from 'antd';\r\nimport _ from 'lodash';\r\n\r\nconst {Title, Paragraph} = Typography;\r\n\r\nexport const PrintCp = ({location}) => {\r\n  const {state} = location;\r\n  // const { receiverDetails} = state;\r\n  console.log(state, 'data CP');\r\n  const columns = [\r\n    {\r\n      title: 'Part Name',\r\n      key: 'part_name',\r\n      dataIndex: 'part_name',\r\n    },\r\n    // {\r\n    //   title: 'Receiver Location',\r\n    //   dataIndex: 'receiver_location',\r\n    //   key: 'receiver_location',\r\n    // },\r\n    {\r\n      title: 'Proposed Packaging Solution',\r\n      key: 'proposed_solution_proposal',\r\n      dataIndex: 'proposed_solution_proposal',\r\n      render: (solution) => (\r\n        <Row>\r\n          {Object.keys(solution).map((key) => (\r\n            <Col span={24}>\r\n              {solution[key]} {key}\r\n              <br />\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      ),\r\n    },\r\n    {\r\n      title: 'No. of Component per Solution',\r\n      dataIndex: 'component_per_solution',\r\n      key: 'component_per_solution',\r\n    },\r\n    {\r\n      title: 'Price Per Component',\r\n      dataIndex: 'price_per_component',\r\n      key: 'price_per_component',\r\n    },\r\n    {\r\n      title: 'Total Trip Cost Per Solution',\r\n      key: 'trip_cost',\r\n      dataIndex: 'trip_cost',\r\n    },\r\n    {\r\n      title: 'Parts Volume/Month',\r\n      dataIndex: 'parts_volume_per_month',\r\n      key: 'parts_volume_per_month',\r\n    },\r\n    {\r\n      title: 'Cycle Time (Days)',\r\n      dataIndex: 'cycle_days',\r\n      key: 'cycle_days',\r\n    },\r\n  ];\r\n\r\n  const dataSource = [\r\n    {\r\n      key: '1',\r\n      field: 'Sender - Receiver:',\r\n      value: state.sender_client || '-',\r\n    },\r\n    {\r\n      key: '2',\r\n      field: 'Contact Person:',\r\n      value: state.scs_id.contact_person || '-',\r\n    },\r\n    {\r\n      key: '3',\r\n      field: 'Contact Number:',\r\n      value: state.scs_id.contact_no || '-',\r\n    },\r\n    {\r\n      key: '4',\r\n      field: 'Email ID:',\r\n      value: state.scs_id.email || '-',\r\n    },\r\n  ];\r\n  const table3 = [\r\n    {\r\n      field: 'Flow implementation timeline:',\r\n      key: 'flowImpementation',\r\n      value: '25-30 working days from day contract is signed.',\r\n    },\r\n    {field: 'Agreement Status:', key: 'agreementStatus', value: 'Agreement to be signed'},\r\n  ];\r\n\r\n  const CreateTable = ({left, right}) => (\r\n    <Row className=\"print-cp-border\">\r\n      <Col span={11} className=\"py-1\">\r\n        {left}\r\n      </Col>\r\n      <div className=\"row align-center justify-center\">\r\n        <div className=\"print-cp-divider\" />\r\n      </div>\r\n      <Col span={11} className=\"py-1\">\r\n        {right}\r\n      </Col>\r\n    </Row>\r\n  );\r\n  const d = new Date();\r\n  const utc = d.getTime() + d.getTimezoneOffset() * 60000;\r\n  const nd = new Date(utc + 3600000 * +5.5);\r\n  const ist = nd.toLocaleString();\r\n  return (\r\n    <div className=\"print-cp-container\">\r\n      <Row>\r\n        <Col span={24}>\r\n          <div className=\"row justify-between align-center\">\r\n            <div className=\"print-cp-logo\">\r\n              <img src={`${process.env.PUBLIC_URL}/home-logo.png`} className=\"\" alt=\"Yantraksh\" />\r\n            </div>\r\n            <div>\r\n              <text>\r\n                <b>Date : </b>\r\n                {ist.split(',')[0]}\r\n                <br />\r\n                <b>\r\n                  YNT/CP/\r\n                  {state.id}\r\n                </b>\r\n              </text>\r\n            </div>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <br />\r\n      <br />\r\n      <Row>\r\n        <Col span={24}>\r\n          <Title\r\n            level={4}\r\n            className=\"row align-center justify-center print-cp-gray print-cp-border\">\r\n            Proposal for {state.sender_client}\r\n          </Title>\r\n        </Col>\r\n      </Row>\r\n      <br />\r\n      <CreateTable\r\n        left={dataSource.map((i, key) => (\r\n          <Row key={i.key}>\r\n            <Col span={24} className=\"px-2\">\r\n              <b key={i.key}>{i.field}</b>\r\n            </Col>\r\n          </Row>\r\n        ))}\r\n        right={dataSource.map((i, key) => (\r\n          <Row key={i.key}>\r\n            <Col span={24} className=\"px-2\">\r\n              {i.value}\r\n            </Col>\r\n          </Row>\r\n        ))}\r\n      />\r\n      <br />\r\n      {/* <CreateTable\r\n        left={[{field: 'Receiver details :', key: 'reveiverDetails'}].map((i, key) => (\r\n          <Row key={i.key}>\r\n            <Col span={24} className=\"px-2\">\r\n              <b key={i.key}>{i.field}</b>\r\n            </Col>\r\n          </Row>\r\n        ))}\r\n        right={[\r\n          {\r\n            value: state.receiverDetails.length > 0 ? state.receiverDetails[0].receiver_name : '',\r\n            key: 'reveiverDetails',\r\n          },\r\n        ].map((i, key) => (\r\n          <Row key={i.key}>\r\n            <Col span={24} className=\"px-2\">\r\n              {state.receiverDetails.length > 1 ? state.receiverDetails[0].receiver_name : i.value}\r\n            </Col>\r\n          </Row>\r\n        ))}\r\n      /> */}\r\n      <br />\r\n      <CreateTable\r\n        left={table3.map((i, key) => (\r\n          <Row key={i.key}>\r\n            <Col span={24} className=\"px-2\">\r\n              <b key={i.key}>{i.field}</b>\r\n            </Col>\r\n          </Row>\r\n        ))}\r\n        right={table3.map((i, key) => (\r\n          <Row key={i.key}>\r\n            <Col span={24} className=\"px-2\">\r\n              <b>{i.value}</b>\r\n            </Col>\r\n          </Row>\r\n        ))}\r\n      />\r\n      <br />\r\n      <Table\r\n        size=\"small\"\r\n        pagination={false}\r\n        bordered\r\n        dataSource={state.receiverDetails || []}\r\n        columns={columns}\r\n      />\r\n      <br />\r\n      <Paragraph>\r\n        * Cycle time to be revisited after regular intervals, pricing may vary if cycle time varies.\r\n        <br />\r\n        YANTRA Packs will not be responsible for Loading & Unloading activities at{' '}\r\n        {state.sender_client}\r\n        {/* and{' '}\r\n        {state.receiverDetails.length > 1\r\n          ? 'Multiple Receivers'\r\n          : state.receiverDetails[0].receiver_name} */}\r\n        <br />\r\n        YANTRA Packs will be responsible for reverse logistics from Destination to Origin.\r\n        <br />\r\n        The Commercial Offer is Valid for 30 days.\r\n      </Paragraph>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PrintCp;\r\n"],"sourceRoot":""}