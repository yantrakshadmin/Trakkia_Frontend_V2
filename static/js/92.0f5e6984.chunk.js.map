{"version":3,"sources":["../../common/formFields/PFEP/SCSBasicDetails.formFields.js","forms/PFEP/SCSBasicDetails.form.js"],"names":["SCSBasicDetailsFormFields","key","type","FORM_ELEMENT_TYPES","DATE","others","style","width","kwargs","placeholder","INPUT","customLabel","SCSProductDetailsFormFields","defaultValue","selectOptions","SELECT","SWITCH","SCSBasicDetailsForm","id","onCancel","lead","onNext","active","useState","loading","setLoading","useForm","form","dispatch","useDispatch","state","useSelector","e","data","pfepData","submit","a","ADD_PFEP_DATA","lead_no","useEffect","STOP_STEP_LOADING","spinning","initialValues","date","moment","onFinish","layout","autoComplete","orientation","justifyContent","slice","map","item","idx","span","toString","className","formItem","FILE_DRAG_DROP","multiple","onChange","info","fileList","forEach","f","status","message","error","name","justify","htmlType","disabled","onClick","ArrowRightOutlined","fontSize"],"mappings":"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","file":"static/js/92.0f5e6984.chunk.js","sourcesContent":["import {FORM_ELEMENT_TYPES} from 'web/src/constants/formFields.constant';\r\n\r\nexport const SCSBasicDetailsFormFields = [\r\n  {\r\n    key: 'date',\r\n    type: FORM_ELEMENT_TYPES.DATE,\r\n    others: {\r\n      style: {width: '100%'},\r\n    },\r\n  },\r\n  {\r\n    key: 'contact_person',\r\n    kwargs: {\r\n      placeholder: 'Contact Person Name',\r\n    },\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    customLabel: 'Contact Person Name',\r\n  },\r\n  {\r\n    key: 'designation',\r\n    kwargs: {\r\n      placeholder: 'Designation',\r\n    },\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    others: null,\r\n  },\r\n  {\r\n    key: 'email',\r\n    kwargs: {\r\n      placeholder: 'Email',\r\n    },\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    others: null,\r\n    customLabel: 'Email',\r\n  },\r\n  {\r\n    key: 'contact_no',\r\n    kwargs: {\r\n      placeholder: 'Contact Number',\r\n      type: 'number',\r\n    },\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    others: null,\r\n    customLabel: 'Contact Number',\r\n  },\r\n];\r\n\r\nexport const SCSProductDetailsFormFields = [\r\n  {\r\n    key: 'part_name',\r\n    //rules: [{required: true, message: 'Please enter Part Name!'}],\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    others: null,\r\n    kwargs: {\r\n      placeholder: 'Part Name',\r\n    },\r\n    customLabel: 'Part Name',\r\n  },\r\n  {\r\n    key: 'part_number',\r\n    kwargs: {\r\n      placeholder: 'Part Number',\r\n    },\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    customLabel: 'Part Number',\r\n  },\r\n  {\r\n    key: 'weight',\r\n    //rules: [{required: true, message: 'Please enter Weight(Kgs) !'}],\r\n    kwargs: {\r\n      type: 'number',\r\n      placeholder: 'Weight (Kg)',\r\n    },\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    customLabel: 'Weight (Kg)',\r\n  },\r\n  {\r\n    key: 'length',\r\n    kwargs: {\r\n      type: 'number',\r\n      placeholder: 'Length (mm)',\r\n    },\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    customLabel: 'Length (mm)',\r\n  },\r\n  {\r\n    key: 'breadth',\r\n    kwargs: {\r\n      type: 'number',\r\n      placeholder: 'Breadth (mm)',\r\n    },\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    customLabel: 'Breadth (mm)',\r\n  },\r\n  {\r\n    key: 'height',\r\n    kwargs: {\r\n      type: 'number',\r\n      placeholder: 'Height (mm)',\r\n    },\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    customLabel: 'Height (mm)',\r\n  },\r\n  // {\r\n  //   key: 'volume_pm',\r\n  //   rules: [{required: true, message: 'Please enter Volume Per Month!'}],\r\n  //   kwargs: {\r\n  //     type: 'number',\r\n  //     placeholder: 'Volume Per Month',\r\n  //   },\r\n  //   type: FORM_ELEMENT_TYPES.INPUT,\r\n  //   customLabel: 'Volume Per Month',\r\n  // },\r\n  // {\r\n  //   key: 'dispatch_frequency',\r\n  //   kwargs: {\r\n  //     placeholder: 'Dispatch Frequency',\r\n  //   },\r\n  //   type: FORM_ELEMENT_TYPES.INPUT,\r\n  //   customLabel: 'Dispatch Frequency',\r\n  // },\r\n\r\n  // {\r\n  //   key: 'highest_mv',\r\n  //   kwargs: {\r\n  //     placeholder: 'Highest Monthly Volume',\r\n  //   },\r\n  //   type: FORM_ELEMENT_TYPES.INPUT,\r\n  //   customLabel: 'Highest Monthly Volume',\r\n  // },\r\n  // {\r\n  //   key: 'lowest_mv',\r\n  //   kwargs: {\r\n  //     placeholder: 'Lowest Monthly Volume',\r\n  //   },\r\n  //   type: FORM_ELEMENT_TYPES.INPUT,\r\n  //   customLabel: 'Lowest Monthly Volume',\r\n  // },\r\n  // {\r\n  //   key: 'average_dispatchlotsize',\r\n  //   kwargs: {\r\n  //     placeholder: 'Average Dispatch Lot Size',\r\n  //   },\r\n  //   type: FORM_ELEMENT_TYPES.INPUT,\r\n  //   customLabel: 'Average Dispatch Lot Size',\r\n  // },\r\n  // {\r\n  //   key: 'transportation_mode',\r\n  //   kwargs: {\r\n  //     placeholder: 'Current Transportation Mode',\r\n  //   },\r\n  //   type: FORM_ELEMENT_TYPES.INPUT,\r\n  //   customLabel: 'Current Transportation Mode',\r\n  // },\r\n  {\r\n    key: 'critical_area',\r\n    kwargs: {\r\n      placeholder: 'Critical Area, If Any?',\r\n    },\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    customLabel: 'Critical Area, If Any?',\r\n  },\r\n  {\r\n    key: 'np_ef',\r\n    kwargs: {\r\n      placeholder: 'New Part or Existing flow?',\r\n    },\r\n    others: {\r\n      defaultValue: 'New Part',\r\n      selectOptions: ['New Part', 'Existing Flow'],\r\n    },\r\n    type: FORM_ELEMENT_TYPES.SELECT,\r\n    customLabel: 'New Part/Existing flow',\r\n  },\r\n\r\n  {\r\n    key: 'greasy_oily',\r\n    kwargs: {\r\n      placeholder: 'Is Part Greasy or Oily?',\r\n    },\r\n    type: FORM_ELEMENT_TYPES.SWITCH,\r\n    customLabel: 'Is Part Greasy or Oily?',\r\n  },\r\n  {\r\n    key: 'part_cad_data',\r\n    kwargs: {\r\n      placeholder: 'Part CAD Data (2D, 3D drawing, if available)',\r\n    },\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    customLabel: 'Part CAD Data, Available?',\r\n  },\r\n  {\r\n    key: 'special_measure',\r\n    kwargs: {\r\n      placeholder: 'Precautions to be consider?',\r\n    },\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    customLabel: 'Precautions or Special Measures?',\r\n  },\r\n  {\r\n    key: 'remarks1',\r\n    kwargs: {\r\n      placeholder: 'Remark',\r\n    },\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    customLabel: 'Remark',\r\n  },\r\n];\r\n","import React, {useEffect, useState} from 'react';\r\nimport {Form, Col, Row, Button, Divider, Spin, message} from 'antd';\r\nimport {ArrowRightOutlined, MinusCircleOutlined, PlusOutlined} from '@ant-design/icons';\r\nimport {\r\n  SCSBasicDetailsFormFields,\r\n  SCSProductDetailsFormFields,\r\n} from 'common/formFields/PFEP/SCSBasicDetails.formFields';\r\nimport formItem from 'hocs/formItem.hoc';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {ADD_PFEP_BASIC_DATA, ADD_PFEP_DATA, STOP_STEP_LOADING} from 'common/actions';\r\nimport moment from 'moment';\r\nimport {FORM_ELEMENT_TYPES} from 'constants/formFields.constant';\r\n\r\nconst SCSBasicDetailsForm = ({id, onCancel, lead, onNext, active}) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [form] = Form.useForm();\r\n  const dispatch = useDispatch();\r\n  const state = useSelector((e) => e.data.pfepData);\r\n\r\n  const submit = async (data) => {\r\n    setLoading(true);\r\n    await dispatch({\r\n      type: ADD_PFEP_DATA,\r\n      data: {...data, lead_no: lead},\r\n    });\r\n    setLoading(false);\r\n    if (active === 0) {\r\n      onNext();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (active !== 0) {\r\n      form.submit();\r\n      dispatch({type: STOP_STEP_LOADING});\r\n    }\r\n  }, [active]);\r\n\r\n  return (\r\n    <Spin spinning={loading}>\r\n      <Form\r\n        initialValues={{...state, date: state.date ? moment(state.date) : null}}\r\n        onFinish={submit}\r\n        form={form}\r\n        layout=\"vertical\"\r\n        // hideRequiredMark\r\n        autoComplete=\"off\">\r\n        <Divider orientation=\"left\">Basic Details</Divider>\r\n        <Row style={{justifyContent: 'left'}}>\r\n          {SCSBasicDetailsFormFields.slice(0, 1).map((item, idx) => (\r\n            <Col span={4}>\r\n              <div key={idx.toString()} className=\"p-2\">\r\n                {formItem(item)}\r\n              </div>\r\n            </Col>\r\n          ))}\r\n          {SCSBasicDetailsFormFields.slice(1, 5).map((item, idx) => (\r\n            <Col span={5}>\r\n              <div key={idx.toString()} className=\"p-2\">\r\n                {formItem(item)}\r\n              </div>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n        <Divider orientation=\"left\">Part Details</Divider>\r\n        <Row style={{justifyContent: 'left'}}>\r\n          {SCSProductDetailsFormFields.map((item, idx) => (\r\n            <Col span={8}>\r\n              <div key={idx.toString()} className=\"p-2\">\r\n                {formItem(item)}\r\n              </div>\r\n            </Col>\r\n          ))}\r\n          <Col span={6}>\r\n            <div className=\"p-2\">\r\n              {formItem({\r\n                key: 'fileA',\r\n                type: FORM_ELEMENT_TYPES.FILE_DRAG_DROP,\r\n                customLabel: 'Upload Files',\r\n                //rules: [{required: id ? false : true, message: 'Please upload Files!'}],\r\n                kwargs: {\r\n                  placeholder: 'Upload',\r\n                  multiple: true,\r\n                  onChange(info) {\r\n                    const {fileList} = info;\r\n                    console.log(fileList);\r\n                    fileList.forEach((f) => {\r\n                      if (f.status === 'error') {\r\n                        message.error(`${f.name} file upload failed.`);\r\n                      }\r\n                    });\r\n                  },\r\n                },\r\n              })}\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row justify=\"space-between\">\r\n          <div className=\"row\">\r\n            <Button type=\"primary\" htmlType=\"submit\" disabled>\r\n              Submit\r\n            </Button>\r\n            <div className=\"p-2\" />\r\n            <Button type=\"primary\" onClick={onCancel}>\r\n              Cancel\r\n            </Button>\r\n          </div>\r\n          <Button type=\"link\" htmlType=\"submit\">\r\n            <ArrowRightOutlined style={{fontSize: 30}} />\r\n          </Button>\r\n        </Row>\r\n      </Form>\r\n    </Spin>\r\n  );\r\n};\r\n\r\nexport default SCSBasicDetailsForm;\r\n"],"sourceRoot":""}