{"version":3,"sources":["../../common/formFields/PFEP/SCSExistingPackagingDetails.formFields.js","forms/PFEP/SCSExistingPackagingDetails.form.js"],"names":["Row01FF","key","type","FORM_ELEMENT_TYPES","SWITCH","others","defaultValue","customLabel","kwargs","placeholder","SELECT","selectOptions","colSpan","Row02FF","INPUT","min","Row03FF","PFEPProductDetailsForm","id","onCancel","active","onNext","useState","loading","setLoading","useForm","form","dispatch","useDispatch","state","useSelector","e","data","pfepData","newPack","setNewPack","innerPart","setInnerPart","useEffect","new_packaging","inner_partition","submit","a","ADD_PFEP_DATA","STOP_STEP_LOADING","spinning","orientation","onFinish","initialValues","current_packaging","layout","autoComplete","style","justifyContent","slice","map","item","idx","span","toString","className","formItem","onChange","v","List","name","fields","add","remove","field","index","align","top","block","disabled","noLabel","formOptions","fieldKey","onClick","MinusCircleOutlined","Item","PlusOutlined","FILE_DRAG_DROP","multiple","info","fileList","forEach","f","status","message","error","justify","htmlType","ArrowRightOutlined","fontSize"],"mappings":"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","file":"static/js/93.40984e4c.chunk.js","sourcesContent":["import {FORM_ELEMENT_TYPES} from 'web/src/constants/formFields.constant';\r\n\r\nconst packagingTypeChoices = [\r\n  'Corrugated Box',\r\n  'Wooden Box',\r\n  'Foldable Crate',\r\n  'STD Foldable Crate',\r\n  'Crate',\r\n  'PP Box',\r\n  'FLC (1200x800x950)',\r\n  'STD FLC (1200x800x950)',\r\n  'FSC (1200x800x650)',\r\n  'STD FSC (1200x800x650)',\r\n  'Wooden Pallet',\r\n  'Plastic Pallet',\r\n  'Palletized Sol - Corrugated Box',\r\n  'Palletized Sol - Wooden box',\r\n  'Palletized Sol - Foldable crate',\r\n  'Palletized Sol - PP Box',\r\n  'Palletized Sol - Bin',\r\n  'Wire Mesh Container',\r\n  'Other solution',\r\n];\r\n\r\nexport const Row01FF = [\r\n  {\r\n    key: 'new_packaging',\r\n    type: FORM_ELEMENT_TYPES.SWITCH,\r\n    others: {\r\n      defaultValue: false,\r\n    },\r\n    customLabel: 'New Packaging',\r\n  },\r\n  {\r\n    key: 'packaging_type',\r\n    //rules: [{required: true, message: 'Please select status!'}],\r\n    kwargs: {\r\n      placeholder: 'Select',\r\n    },\r\n    type: FORM_ELEMENT_TYPES.SELECT,\r\n    others: {selectOptions: packagingTypeChoices},\r\n    customLabel: 'Packaging Type',\r\n    colSpan: 6,\r\n  },\r\n];\r\n\r\nexport const Row02FF = [\r\n  {\r\n    key: 'inner_partition',\r\n    type: FORM_ELEMENT_TYPES.SWITCH,\r\n    others: {\r\n      defaultValue: false,\r\n    },\r\n    customLabel: 'Inner Partition',\r\n  },\r\n  {\r\n    key: 'dimension',\r\n    //rules: [{required: true, message: 'Required!'}],\r\n    kwargs: {\r\n      placeholder: 'Dimension (mm)',\r\n    },\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    others: null,\r\n    customLabel: 'Dimension (mm)',\r\n    colSpan: 4,\r\n  },\r\n  {\r\n    key: 'parts_per_pocket',\r\n    //rules: [{required: true, message: 'Required!'}],\r\n    kwargs: {\r\n      placeholder: 'Parts/Pocket',\r\n      type: 'number',\r\n    },\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    others: null,\r\n    customLabel: 'Parts/Pocket',\r\n    colSpan: 4,\r\n  },\r\n  {\r\n    key: 'matrix_info',\r\n    //rules: [{required: true, message: 'Required!'}],\r\n    kwargs: {\r\n      placeholder: 'Matrix Info',\r\n    },\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    others: null,\r\n    customLabel: 'Matrix Info',\r\n    colSpan: 4,\r\n  },\r\n  {\r\n    key: 'no_of_layers',\r\n    //rules: [{required: true, message: 'Required!'}],\r\n    kwargs: {\r\n      placeholder: 'No. of Layers',\r\n      type: 'number',\r\n      min: 0,\r\n    },\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    others: null,\r\n    customLabel: 'No. of Layers',\r\n    colSpan: 4,\r\n  },\r\n  {\r\n    key: 'parts_per_layer',\r\n    //rules: [{required: true, message: 'Required!'}],\r\n    kwargs: {\r\n      placeholder: 'Parts/Layer',\r\n      type: 'number',\r\n      min: 0,\r\n    },\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    others: null,\r\n    customLabel: 'Parts/Layer',\r\n    colSpan: 4,\r\n  },\r\n];\r\n\r\nexport const Row03FF = [\r\n  {\r\n    key: 'spesheet_pm',\r\n    kwargs: {\r\n      type: 'number',\r\n      placeholder: 'Separator Sheet Per PM',\r\n    },\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    others: null,\r\n    customLabel: 'Separator Sheet Per PM',\r\n  },\r\n  {\r\n    key: 'stacking_nesting',\r\n    kwargs: {\r\n      placeholder: 'Stacking, Nesting or Multiple parts in single Pocket. If any?',\r\n    },\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    others: null,\r\n    customLabel: 'Stacking, Nesting or Multiple parts in single Pocket.',\r\n  },\r\n  {\r\n    key: 'total_parts_per_pm',\r\n    kwargs: {\r\n      type: 'number',\r\n      placeholder: 'Total Part Per PM',\r\n    },\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    others: null,\r\n    customLabel: 'Total Part Per PM',\r\n  },\r\n  {\r\n    key: 'pm_loaded_weight',\r\n    kwargs: {\r\n      type: 'number',\r\n      placeholder: 'PM Loaded Weight(Kgs)',\r\n    },\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    others: null,\r\n    customLabel: 'PM Loaded Weight(Kgs)',\r\n  },\r\n  {\r\n    key: 'palletized_sol_details',\r\n    kwargs: {\r\n      placeholder: 'Pallatized Solution Details',\r\n    },\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    others: null,\r\n    customLabel: 'Pallatized Solution Details',\r\n  },\r\n  {\r\n    key: 'current_packaging',\r\n    type: FORM_ELEMENT_TYPES.SELECT,\r\n    others: {\r\n      defaultValue: 'Returnable',\r\n      selectOptions: ['Returnable', 'Non-Returnable'],\r\n    },\r\n    customLabel: 'Current Packaging Type',\r\n  },\r\n  {\r\n    key: 'trips_per_pm',\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    others: null,\r\n    customLabel: 'Trips Per PM Before Scraping',\r\n    kwargs: {\r\n      placeholder: 'Trips Per PM Before Scraping',\r\n    },\r\n  },\r\n  {\r\n    key: 'price_per_unit',\r\n    kwargs: {\r\n      type: 'number',\r\n      placeholder: 'Price Per Unit',\r\n    },\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    others: null,\r\n    customLabel: 'Price Per Unit',\r\n  },\r\n  {\r\n    key: 'remarks2',\r\n    kwargs: {\r\n      placeholder: 'Remark',\r\n    },\r\n    customLabel: 'Remarks',\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    others: null,\r\n  },\r\n  //   {\r\n  //     key: 'packaging_length',\r\n  //     kwargs: {\r\n  //       type: 'number',\r\n  //       placeholder: 'Packaging Length',\r\n  //     },\r\n  //     type: FORM_ELEMENT_TYPES.INPUT,\r\n  //     customLabel: 'Packaging Length(mm)',\r\n  //   },\r\n  //   {\r\n  //     key: 'packaging_breadth',\r\n  //     kwargs: {\r\n  //       type: 'number',\r\n  //       placeholder: 'Packaging Breadth',\r\n  //     },\r\n  //     type: FORM_ELEMENT_TYPES.INPUT,\r\n  //     customLabel: 'Packaging Breadth(mm)',\r\n  //   },\r\n  //   {\r\n  //     key: 'packaging_height',\r\n  //     kwargs: {\r\n  //       type: 'number',\r\n  //       placeholder: 'Packaging Height',\r\n  //     },\r\n  //     type: FORM_ELEMENT_TYPES.INPUT,\r\n  //     customLabel: 'Packaging Height(mm)',\r\n  //   },\r\n  //   {\r\n  //     key: 'pocket_length',\r\n  //     kwargs: {\r\n  //       type: 'number',\r\n  //       placeholder: 'Pocket Length',\r\n  //     },\r\n  //     type: FORM_ELEMENT_TYPES.INPUT,\r\n  //     customLabel: 'Pocket Length(mm)',\r\n  //   },\r\n  //   {\r\n  //     key: 'pocket_breadth',\r\n  //     kwargs: {\r\n  //       type: 'number',\r\n  //       placeholder: 'Pocket Breadth',\r\n  //     },\r\n  //     type: FORM_ELEMENT_TYPES.INPUT,\r\n  //     customLabel: 'Pocket Breadth(mm)',\r\n  //   },\r\n  //   {\r\n  //     key: 'pocket_height',\r\n  //     kwargs: {\r\n  //       type: 'number',\r\n  //       placeholder: 'Pocket Height',\r\n  //     },\r\n  //     type: FORM_ELEMENT_TYPES.INPUT,\r\n  //     customLabel: 'Pocket Height(mm)',\r\n  //   },\r\n\r\n  //   {\r\n  //     key: 'inserts_pm',\r\n  //     kwargs: {\r\n  //       type: 'number',\r\n  //       placeholder: 'Inserts Per Packaging Material',\r\n  //     },\r\n  //     type: FORM_ELEMENT_TYPES.INPUT,\r\n  //     others: null,\r\n  //     customLabel: 'Inserts Per PM',\r\n  //   },\r\n  //   {\r\n  //     key: 'matrix_details',\r\n  //     kwargs: {\r\n  //       placeholder: 'Pocket Matrix Detail',\r\n  //     },\r\n  //     type: FORM_ELEMENT_TYPES.INPUT,\r\n  //     others: null,\r\n  //     customLabel: 'Pocket Matrix Detail',\r\n  //   },\r\n  //   {\r\n  //     key: 'parts_per_pocket',\r\n  //     kwargs: {\r\n  //       placeholder: 'Parts per Pocket',\r\n  //     },\r\n  //     type: FORM_ELEMENT_TYPES.INPUT,\r\n  //     others: null,\r\n  //     customLabel: 'Parts per Pocket',\r\n  //   },\r\n  //   {\r\n  //     key: 'parts_per_layer',\r\n  //     kwargs: {\r\n  //       type: 'number',\r\n  //       placeholder: 'Part Per Layer',\r\n  //     },\r\n  //     type: FORM_ELEMENT_TYPES.INPUT,\r\n  //     others: null,\r\n  //     customLabel: 'Part Per Layer',\r\n  //   },\r\n  //   {\r\n  //     key: 'current_packaging',\r\n  //     type: FORM_ELEMENT_TYPES.SELECT,\r\n  //     others: {\r\n  //       defaultValue: 'Returnable',\r\n  //       selectOptions: ['Returnable', 'Non Returnable'],\r\n  //     },\r\n  //     customLabel: 'Current Packaging Type',\r\n  //   },\r\n  //   {\r\n  //     key: 'wastage_pm',\r\n  //     type: FORM_ELEMENT_TYPES.INPUT,\r\n  //     others: null,\r\n  //     customLabel: 'Wastage Of PM',\r\n  //     kwargs: {\r\n  //       placeholder: 'Wastage Of PM',\r\n  //     },\r\n  //   },\r\n\r\n  //   {\r\n  //     key: 'pocket_length1',\r\n  //     kwargs: {\r\n  //       type: 'number',\r\n  //       placeholder: 'Pocket 2 Length',\r\n  //     },\r\n  //     type: FORM_ELEMENT_TYPES.INPUT,\r\n  //     customLabel: 'Pocket 2 Length(mm)',\r\n  //   },\r\n  //   {\r\n  //     key: 'pocket_breadth1',\r\n  //     kwargs: {\r\n  //       type: 'number',\r\n  //       placeholder: 'Pocket 2 Breadth',\r\n  //     },\r\n  //     type: FORM_ELEMENT_TYPES.INPUT,\r\n  //     customLabel: 'Pocket 2 Breadth(mm)',\r\n  //   },\r\n  //   {\r\n  //     key: 'pocket_height1',\r\n  //     kwargs: {\r\n  //       type: 'number',\r\n  //       placeholder: 'Pocket 2 Height',\r\n  //     },\r\n  //     type: FORM_ELEMENT_TYPES.INPUT,\r\n  //     customLabel: 'Pocket 2 Height(mm)',\r\n  //   },\r\n];\r\n","import React, {useEffect, useState} from 'react';\r\nimport {Form, Col, Row, Button, Divider, Spin, message} from 'antd';\r\nimport formItem from 'hocs/formItem.hoc';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {ADD_PFEP_DATA, STOP_STEP_LOADING} from 'common/actions';\r\nimport {\r\n  Row01FF,\r\n  Row02FF,\r\n  Row03FF,\r\n} from 'common/formFields/PFEP/SCSExistingPackagingDetails.formFields';\r\nimport {ArrowRightOutlined, PlusOutlined, MinusCircleOutlined} from '@ant-design/icons';\r\nimport {FORM_ELEMENT_TYPES} from 'constants/formFields.constant';\r\n\r\nexport const PFEPProductDetailsForm = ({id, onCancel, active, onNext}) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [form] = Form.useForm();\r\n  const dispatch = useDispatch();\r\n  const state = useSelector((e) => e.data.pfepData);\r\n\r\n  const [newPack, setNewPack] = useState(false);\r\n  const [innerPart, setInnerPart] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (state.new_packaging) {\r\n      setNewPack(state.new_packaging);\r\n    }\r\n    if (state.inner_partition) {\r\n      setInnerPart(state.inner_partition);\r\n    }\r\n  }, []);\r\n\r\n  const submit = async (data) => {\r\n    setLoading(true);\r\n    await dispatch({type: ADD_PFEP_DATA, data});\r\n    setLoading(false);\r\n    if (active === 2) {\r\n      onNext();\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (active !== 2) {\r\n      form.submit();\r\n      dispatch({type: STOP_STEP_LOADING});\r\n    }\r\n  }, [active]);\r\n  return (\r\n    <Spin spinning={loading}>\r\n      <Divider orientation=\"left\">Packaging Details</Divider>\r\n      <Form\r\n        onFinish={submit}\r\n        initialValues={{\r\n          ...state,\r\n          current_packaging: state.current_packaging ? state.current_packaging : 'Returnable',\r\n        }}\r\n        form={form}\r\n        layout=\"vertical\"\r\n        // hideRequiredMark\r\n        autoComplete=\"off\">\r\n        <Row style={{justifyContent: 'left'}}>\r\n          {Row01FF.slice(0, 1).map((item, idx) => (\r\n            <Col span={6}>\r\n              <div key={idx.toString()} className=\"p-2\">\r\n                {formItem({\r\n                  ...item,\r\n                  kwargs: {\r\n                    ...item.kwargs,\r\n                    onChange: (v) => {\r\n                      setNewPack(v);\r\n                    },\r\n                  },\r\n                })}\r\n              </div>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n\r\n        {!newPack ? (\r\n          <>\r\n            <Row style={{justifyContent: 'left'}}>\r\n              {Row02FF.slice(0, 1).map((item, idx) => (\r\n                <Col span={6}>\r\n                  <div key={idx.toString()} className=\"p-2\">\r\n                    {formItem({\r\n                      ...item,\r\n                      kwargs: {\r\n                        ...item.kwargs,\r\n                        onChange: (v) => {\r\n                          setInnerPart(v);\r\n                        },\r\n                      },\r\n                    })}\r\n                  </div>\r\n                </Col>\r\n              ))}\r\n            </Row>\r\n            {innerPart ? (\r\n              <Form.List name=\"insert_types\">\r\n                {(fields, {add, remove}) => {\r\n                  return (\r\n                    <div>\r\n                      {fields.map((field, index) => (\r\n                        <Row align=\"middle\">\r\n                          <Col span={3}>\r\n                            <Button\r\n                              type=\"danger\"\r\n                              style={index !== 0 ? {top: '-2vh'} : null}\r\n                              block\r\n                              disabled>\r\n                              {`Insert Type ${index + 1}`}\r\n                            </Button>\r\n                          </Col>\r\n                          {Row02FF.slice(1).map((item) => (\r\n                            <Col span={item.colSpan}>\r\n                              <div className=\"p-2\">\r\n                                {formItem({\r\n                                  ...item,\r\n                                  noLabel: index !== 0,\r\n                                  form,\r\n                                  others: {\r\n                                    formOptions: {\r\n                                      ...field,\r\n                                      name: [field.name, item.key],\r\n                                      fieldKey: [field.fieldKey, item.key],\r\n                                    },\r\n                                  },\r\n                                })}\r\n                              </div>\r\n                            </Col>\r\n                          ))}\r\n                          <Col span={1}>\r\n                            <Button\r\n                              type=\"danger\"\r\n                              style={index !== 0 ? {top: '-2vh'} : null}\r\n                              onClick={() => {\r\n                                remove(field.name);\r\n                              }}\r\n                              block>\r\n                              <MinusCircleOutlined />\r\n                            </Button>\r\n                          </Col>\r\n                        </Row>\r\n                      ))}\r\n                      <Form.Item>\r\n                        <Button\r\n                          type=\"dashed\"\r\n                          onClick={() => {\r\n                            add();\r\n                          }}\r\n                          block>\r\n                          <PlusOutlined /> Add Insert Type\r\n                        </Button>\r\n                      </Form.Item>\r\n                    </div>\r\n                  );\r\n                }}\r\n              </Form.List>\r\n            ) : null}\r\n\r\n            <Divider orientation=\"left\" />\r\n\r\n            <Row style={{justifyContent: 'left'}}>\r\n              {Row01FF.slice(1, 2).map((item, idx) => (\r\n                <Col span={6}>\r\n                  <div key={idx.toString()} className=\"p-2\">\r\n                    {formItem(item)}\r\n                  </div>\r\n                </Col>\r\n              ))}\r\n              {Row03FF.map((item, idx) => (\r\n                <Col span={6}>\r\n                  <div key={idx.toString()} className=\"p-2\">\r\n                    {formItem(item)}\r\n                  </div>\r\n                </Col>\r\n              ))}\r\n              <Col span={6}>\r\n                <div className=\"p-2\">\r\n                  {formItem({\r\n                    key: 'fileB',\r\n                    type: FORM_ELEMENT_TYPES.FILE_DRAG_DROP,\r\n                    customLabel: 'Upload Files',\r\n                    //rules: [{required: id ? false : true, message: 'Please upload Files!'}],\r\n                    kwargs: {\r\n                      placeholder: 'Upload',\r\n                      multiple: true,\r\n                      onChange(info) {\r\n                        const {fileList} = info;\r\n                        fileList.forEach((f) => {\r\n                          if (f.status === 'error') {\r\n                            message.error(`${f.name} file upload failed.`);\r\n                          }\r\n                        });\r\n                      },\r\n                    },\r\n                  })}\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </>\r\n        ) : null}\r\n\r\n        <Row justify=\"space-between\">\r\n          <div className=\"row\">\r\n            <Button type=\"primary\" htmlType=\"submit\" disabled>\r\n              Submit\r\n            </Button>\r\n            <div className=\"p-2\" />\r\n            <Button type=\"primary\" onClick={onCancel}>\r\n              Cancel\r\n            </Button>\r\n          </div>\r\n          <Button type=\"link\" htmlType=\"submit\">\r\n            <ArrowRightOutlined style={{fontSize: 30}} />\r\n          </Button>\r\n        </Row>\r\n      </Form>\r\n    </Spin>\r\n  );\r\n};\r\n\r\nexport default PFEPProductDetailsForm;\r\n"],"sourceRoot":""}