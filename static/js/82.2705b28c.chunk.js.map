{"version":3,"sources":["../../common/helpers/mrHelper.js","../../common/formFields/PFEP/SCSStockKeeping.formFields.js","forms/PFEP/SCSStockKeeping.form.js"],"names":["mergeArray","a","b","map","item","obj","_","find","i","mr","id","is_rejected","reason","remarks","statusCheck","isAllocated","isRejected","status","filterActive","data","filter","el","active","ifNanReturnZero","num","parseInt","ifNanReturnZeroFloat","parseFloat","ifNotStrReturnA","s","String","numberWithCommas","x","toString","replace","Row01FF","key","kwargs","placeholder","type","FORM_ELEMENT_TYPES","INPUT","others","customLabel","colSpan","PFEPStockKeepingForm","onCancel","onNext","onDone","useState","loading","setLoading","useForm","form","dispatch","useDispatch","state","useSelector","e","pfepData","submit","ADD_PFEP_DATA","useEffect","STOP_STEP_LOADING","handleFieldsChange","useCallback","name","formListName","fieldKey","thisField","temp","getFieldValue","flowsX","Object","assign","total_cycle_time","setFieldsValue","spinning","onFinish","initialValues","layout","onFieldsChange","autoComplete","orientation","List","fields","add","remove","field","index","title","gutter","align","span","formItem","formOptions","onClick","block","MinusCircleOutlined","Item","PlusOutlined","justify","className","htmlType","disabled","ArrowRightOutlined","style","fontSize"],"mappings":"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","file":"static/js/82.2705b28c.chunk.js","sourcesContent":["import _ from 'lodash';\r\n\r\nexport const mergeArray = (a, b) => {\r\n  return a.map((item) => {\r\n    const obj = _.find(b, (i) => i.mr === item.id);\r\n    if (obj) {\r\n      return {\r\n        ...item,\r\n        is_rejected: obj.is_rejected,\r\n        reason: obj.reason,\r\n        mr: obj.mr,\r\n        remarks: obj.remarks,\r\n      };\r\n    }\r\n    return item;\r\n  });\r\n};\r\n\r\nexport const statusCheck = (isAllocated, isRejected) => {\r\n  let status = 'Allocated';\r\n  if (!isAllocated && !isRejected) {\r\n    status = 'Pending';\r\n  } else if (isAllocated && !isRejected) {\r\n    status = 'Allocated';\r\n  } else if (!isAllocated && isRejected) {\r\n    status = 'Rejected';\r\n  }\r\n  return status;\r\n};\r\n\r\nexport const filterActive = (_, data) => {\r\n  return _.filter(data, (el) => el.active);\r\n};\r\n\r\nexport const ifNanReturnZero = (num) => {\r\n  return parseInt(num) ? parseInt(num) : 0;\r\n};\r\n\r\nexport const ifNanReturnZeroFloat = (num) => {\r\n  return parseFloat(num) ? parseFloat(num) : 0;\r\n};\r\n\r\nexport const ifNotStrReturnA = (s) => {\r\n  return String(s) ? String(s) : 'a';\r\n};\r\n\r\nexport const numberWithCommas = (x) => {\r\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n};\r\n","import {FORM_ELEMENT_TYPES} from 'web/src/constants/formFields.constant';\r\n\r\nexport const Row01FF = [\r\n  {\r\n    key: 'sender',\r\n    //rules: [{required: true, message: 'Required!'}],\r\n    kwargs: {\r\n      placeholder: 'Name & Location',\r\n    },\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    others: null,\r\n    customLabel: 'Sender',\r\n    colSpan: 4,\r\n  },\r\n  {\r\n    key: 'receiver',\r\n    //rules: [{required: true, message: 'Required!'}],\r\n    kwargs: {\r\n      placeholder: 'Name & Location',\r\n    },\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    others: null,\r\n    customLabel: 'Receiver',\r\n    colSpan: 4,\r\n  },\r\n  {\r\n    key: 'min_volume',\r\n    //rules: [{required: true, message: 'Required!'}],\r\n    kwargs: {\r\n      placeholder: 'Min. Volume Per Month',\r\n    },\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    others: null,\r\n    customLabel: 'Min. Volume Per Month',\r\n    colSpan: 4,\r\n  },\r\n  {\r\n    key: 'peak_volume',\r\n    //rules: [{required: true, message: 'Required!'}],\r\n    kwargs: {\r\n      placeholder: 'Peak Volume Per Month',\r\n    },\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    others: null,\r\n    customLabel: 'Peak Volume Per Month',\r\n    colSpan: 4,\r\n  },\r\n  {\r\n    key: 'sender_inventory',\r\n    //rules: [{required: true, message: 'Required!'}],\r\n    kwargs: {\r\n      placeholder: 'Sender Inventory TAT',\r\n    },\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    others: null,\r\n    customLabel: 'Sender Inventory TAT',\r\n    colSpan: 4,\r\n  },\r\n  {\r\n    key: 'sender_warehouse',\r\n    //rules: [{required: true, message: 'Required!'}],\r\n    kwargs: {\r\n      placeholder: 'Sender Warehouse TAT',\r\n    },\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    others: null,\r\n    customLabel: 'Sender Warehouse TAT',\r\n    colSpan: 4,\r\n  },\r\n  {\r\n    key: 'transit_time',\r\n    //rules: [{required: true, message: 'Required!'}],\r\n    kwargs: {\r\n      placeholder: 'Transit Time',\r\n    },\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    others: null,\r\n    customLabel: 'Transit Time',\r\n    colSpan: 3,\r\n  },\r\n  {\r\n    key: 'receiver_inventory',\r\n    //rules: [{required: true, message: 'Required!'}],\r\n    kwargs: {\r\n      placeholder: 'Receiver Inventory TAT',\r\n    },\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    others: null,\r\n    customLabel: 'Receiver Inventory TAT',\r\n    colSpan: 4,\r\n  },\r\n  {\r\n    key: 'receiver_warehouse',\r\n    //rules: [{required: true, message: 'Required!'}],\r\n    kwargs: {\r\n      placeholder: 'Receiver Warehouse TAT',\r\n    },\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    others: null,\r\n    customLabel: 'Receiver Warehouse TAT',\r\n    colSpan: 4,\r\n  },\r\n  {\r\n    key: 'return_tat',\r\n    //rules: [{required: true, message: 'Required!'}],\r\n    kwargs: {\r\n      placeholder: 'Return TAT',\r\n    },\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    others: null,\r\n    customLabel: 'Return TAT',\r\n    colSpan: 3,\r\n  },\r\n  {\r\n    key: 'total_cycle_time',\r\n    //rules: [{required: true, message: 'Required!'}],\r\n    kwargs: {\r\n      placeholder: 'Total Cycle Time',\r\n    },\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    others: null,\r\n    customLabel: 'Total Cycle Time',\r\n    colSpan: 3,\r\n  },\r\n  {\r\n    key: 'dispatch_frequency',\r\n    //rules: [{required: true, message: 'Required!'}],\r\n    kwargs: {\r\n      placeholder: 'Dispatch Frequency',\r\n    },\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    others: null,\r\n    customLabel: 'Dispatch Frequency',\r\n    colSpan: 3,\r\n  },\r\n  {\r\n    key: 'remarks',\r\n    //rules: [{required: true, message: 'Required!'}],\r\n    kwargs: {\r\n      placeholder: 'Remarks',\r\n    },\r\n    type: FORM_ELEMENT_TYPES.INPUT,\r\n    others: null,\r\n    customLabel: 'Remarks',\r\n    colSpan: 3,\r\n  },\r\n];\r\n","import React, {useEffect, useState, useCallback} from 'react';\r\nimport {Form, Col, Row, Button, Divider, Spin, Card} from 'antd';\r\nimport formItem from 'hocs/formItem.hoc';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {ADD_PFEP_DATA, STOP_STEP_LOADING} from 'common/actions';\r\nimport {ArrowRightOutlined, MinusCircleOutlined, PlusOutlined} from '@ant-design/icons';\r\nimport {Row01FF} from 'common/formFields/PFEP/SCSStockKeeping.formFields';\r\nimport {ifNanReturnZero} from 'common/helpers/mrHelper';\r\n\r\nexport const PFEPStockKeepingForm = ({id, onCancel, onDone, onNext, active}) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [form] = Form.useForm();\r\n  const dispatch = useDispatch();\r\n  const state = useSelector((e) => e.data.pfepData);\r\n\r\n  const submit = async (data) => {\r\n    setLoading(true);\r\n    await dispatch({type: ADD_PFEP_DATA, data});\r\n    setLoading(false);\r\n    if (active === 1) {\r\n      onNext();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (active !== 1) {\r\n      form.submit();\r\n      dispatch({type: STOP_STEP_LOADING});\r\n    }\r\n  }, [active]);\r\n\r\n  const handleFieldsChange = useCallback(\r\n    (data) => {\r\n      if (data[0]) {\r\n        if (data[0].name) {\r\n          if (data[0].name[2]) {\r\n            const formListName = data[0].name[0];\r\n            const fieldKey = data[0].name[1];\r\n            const thisField = data[0].name[2];\r\n            if (\r\n              thisField === 'sender_inventory' ||\r\n              thisField === 'sender_warehouse' ||\r\n              thisField === 'transit_time' ||\r\n              thisField === 'receiver_inventory' ||\r\n              thisField === 'receiver_warehouse' ||\r\n              thisField === 'return_tat'\r\n            ) {\r\n              const temp =\r\n                ifNanReturnZero(form.getFieldValue([formListName, fieldKey, 'sender_inventory'])) +\r\n                ifNanReturnZero(form.getFieldValue([formListName, fieldKey, 'sender_warehouse'])) +\r\n                ifNanReturnZero(form.getFieldValue([formListName, fieldKey, 'transit_time'])) +\r\n                ifNanReturnZero(\r\n                  form.getFieldValue([formListName, fieldKey, 'receiver_inventory']),\r\n                ) +\r\n                ifNanReturnZero(\r\n                  form.getFieldValue([formListName, fieldKey, 'receiver_warehouse']),\r\n                ) +\r\n                ifNanReturnZero(form.getFieldValue([formListName, fieldKey, 'return_tat']));\r\n              const flowsX = form.getFieldValue(formListName);\r\n              Object.assign(flowsX[fieldKey], {\r\n                total_cycle_time: temp,\r\n              });\r\n              form.setFieldsValue({formListName: flowsX});\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    [form],\r\n  );\r\n\r\n  return (\r\n    <Spin spinning={loading}>\r\n      <Form\r\n        onFinish={submit}\r\n        initialValues={state}\r\n        form={form}\r\n        layout=\"vertical\"\r\n        onFieldsChange={handleFieldsChange}\r\n        // hideRequiredMark\r\n        autoComplete=\"off\">\r\n        <Divider orientation=\"left\">Supply chain details</Divider>\r\n\r\n        <Form.List name=\"sks\">\r\n          {(fields, {add, remove}) => {\r\n            return (\r\n              <>\r\n                {fields.map((field, index) => (\r\n                  <Card title={`Flow ${index + 1}`}>\r\n                    <Row gutter={5} align=\"middle\">\r\n                      {Row01FF.map((item) => (\r\n                        <Col span={item.colSpan}>\r\n                          {formItem({\r\n                            ...item,\r\n                            form,\r\n                            others: {\r\n                              formOptions: {\r\n                                ...field,\r\n                                name: [field.name, item.key],\r\n                                fieldKey: [field.fieldKey, item.key],\r\n                              },\r\n                            },\r\n                          })}\r\n                        </Col>\r\n                      ))}\r\n                      <Col span={1}>\r\n                        <Button\r\n                          type=\"danger\"\r\n                          onClick={() => {\r\n                            remove(field.name);\r\n                          }}\r\n                          block>\r\n                          <MinusCircleOutlined />\r\n                        </Button>\r\n                      </Col>\r\n                    </Row>\r\n                  </Card>\r\n                ))}\r\n                <br />\r\n                <Form.Item>\r\n                  <Button\r\n                    type=\"dashed\"\r\n                    onClick={() => {\r\n                      add();\r\n                    }}\r\n                    block>\r\n                    <PlusOutlined /> Add\r\n                  </Button>\r\n                </Form.Item>\r\n              </>\r\n            );\r\n          }}\r\n        </Form.List>\r\n\r\n        <Row justify=\"space-between\">\r\n          <div className=\"row\">\r\n            <Button type=\"primary\" htmlType=\"submit\" disabled>\r\n              Submit\r\n            </Button>\r\n            <div className=\"p-2\" />\r\n            <Button type=\"primary\" onClick={onCancel}>\r\n              Cancel\r\n            </Button>\r\n          </div>\r\n          <Button type=\"link\" htmlType=\"submit\">\r\n            <ArrowRightOutlined style={{fontSize: 30}} />\r\n          </Button>\r\n        </Row>\r\n      </Form>\r\n    </Spin>\r\n  );\r\n};\r\n\r\nexport default PFEPStockKeepingForm;\r\n"],"sourceRoot":""}